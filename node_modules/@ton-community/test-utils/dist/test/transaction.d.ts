import { AccountStatus, Address, Cell } from "ton-core";
export type FlatTransaction = {
    from?: Address;
    to: Address;
    value?: bigint;
    body: Cell;
    initData?: Cell;
    initCode?: Cell;
    deploy: boolean;
    lt: bigint;
    now: number;
    outMessagesCount: number;
    oldStatus: AccountStatus;
    endStatus: AccountStatus;
    totalFees?: bigint;
    aborted?: boolean;
    destroyed?: boolean;
    exitCode?: number;
    success?: boolean;
};
type WithFunctions<T> = {
    [K in keyof T]: T[K] | ((x: T[K]) => boolean);
};
export type FlatTransactionComparable = Partial<WithFunctions<FlatTransaction>>;
export declare function compareTransaction(tx: FlatTransaction, cmp: FlatTransactionComparable): boolean;
export declare function compareTransactionForTest(subject: any, cmp: FlatTransactionComparable): {
    pass: boolean;
    posMessage: string;
    negMessage: string;
};
export {};
