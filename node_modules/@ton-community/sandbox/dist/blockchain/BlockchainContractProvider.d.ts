import { Address, Cell, ContractProvider, ContractState, Message, Sender, SendMode, TupleItem, TupleReader } from "ton-core";
import { SmartContract } from "./SmartContract";
export declare class BlockchainContractProvider implements ContractProvider {
    private readonly blockchain;
    private readonly address;
    private readonly init?;
    constructor(blockchain: {
        getContract(address: Address): Promise<SmartContract>;
        pushMessage(message: Message): Promise<void>;
    }, address: Address, init?: {
        code: Cell;
        data: Cell;
    } | undefined);
    private getContract;
    getState(): Promise<ContractState>;
    get(name: string, args: TupleItem[]): Promise<{
        stack: TupleReader;
    }>;
    external(message: Cell): Promise<void>;
    internal(via: Sender, args: {
        value: string | bigint;
        bounce?: boolean | null;
        sendMode?: SendMode;
        body?: string | Cell | null;
    }): Promise<void>;
}
